version: '3'
services:
  db:
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  go-app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    healthcheck:
      test: curl --fail http://localhost:${EXTPORT}/is-alive || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
  nginx:
    image: nginx
    ports:
      - '80:80'
      - '443:443'
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
      - ./certbot/www/:/var/www/certbot/:ro
    depends_on:
      - go-app
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
